paths:
    /whitelists:
        get:
            summary: List whitelist
            description: "**Required ACL:** `confd.whitelist.read`"
            tags:
                - whitelists
            parameters:
                - $ref: "#/parameters/tenantuuid"
            responses:
                "200":
                    description: Whitelist
                    schema:
                        $ref: "#/definitions/WhitelistItems"
        post:
            summary: Create whitelist
            description: "**Required ACL:** `confd.whitelist.create`"
            tags:
                - whitelists
            parameters:
                - $ref: "#/parameters/tenantuuid"
                - name: body
                  in: body
                  description: Whitelist to create
                  required: true
                  schema:
                      $ref: "#/definitions/Whitelist"
            responses:
                "201":
                    description: Whitelist list
                    schema:
                        $ref: "#/definitions/Whitelist"

    /whitelists/{whitelist_id}:
        get:
            summary: Get Whitelist
            description: "**Required ACL:** `confd.whitelist.{whitelist_id}.read`"
            tags:
                - whitelists
            parameters:
                - $ref: "#/parameters/tenantuuid"
                - $ref: "#/parameters/whitelistid"
            responses:
                "200":
                    description: Whitelist
                    schema:
                        $ref: "#/definitions/Whitelist"
                "404":
                    $ref: "#/responses/NotFoundError"
        put:
            summary: Update Whitelist
            description: "**Required ACL:** `confd.whitelist.{whitelist_id}.update`"
            tags:
                - whitelists
            parameters:
                - $ref: "#/parameters/tenantuuid"
                - $ref: "#/parameters/whitelistid"
                - name: body
                  in: body
                  required: true
                  schema:
                      $ref: "#/definitions/Whitelist"
            responses:
                "204":
                    $ref: "#/responses/ResourceUpdated"
                "400":
                    $ref: "#/responses/UpdateError"
                "404":
                    $ref: "#/responses/NotFoundError"
        delete:
            summary: Delete whitelist
            description: "**Required ACL:** `confd.whitelist.{whitelist_id}.delete`"
            tags:
                - whitelists
            parameters:
                - $ref: "#/parameters/tenantuuid"
                - $ref: "#/parameters/whitelistid"
            responses:
                "204":
                    $ref: "#/responses/ResourceDeleted"
                "400":
                    $ref: "#/responses/DeleteError"
                "404":
                    $ref: "#/responses/NotFoundError"

parameters:
    tenantuuid:
        name: Wazo-Tenant
        type: string
        in: header
        description: "The tenant's UUID, defining the ownership of a given resource."
        required: false
    whitelistid:
        required: true
        type: integer
        name: whitelist_id
        in: path
        description: Whitelist's ID

definitions:
    Whitelist:
        title: Whitelist
        allOf:
            - properties:
                  id:
                      type: integer
                      readOnly: true
                      description: The id of the whitelist
                  exten:
                      type: string
                      description: extension
                  blocked_num:
                      type: string
                      description: blocked extension or number
    WhitelistItems:
        title: WhitelistItems
        properties:
            items:
                type: array
                items:
                    $ref: "#/definitions/Whitelist"
            total:
                type: integer
        required:
            - total
